{"name":"node-apn","tagline":"Apple Push Notification module for Node.js","body":"#node-apn\r\n\r\nA Node.js module for interfacing with the Apple Push Notification service.\r\n\r\n## Features\r\n\r\n- Fast\r\n- Maintains a connection to the server to maximise notification batching and throughput.\r\n- Enhanced binary interface support, with error handling\r\n- Automatically sends unsent notifications if an error occurs\r\n- Feedback service support\r\n- Complies with all best practises laid out by Apple\r\n\r\n## Installation\r\n\r\nVia [npm][]:\r\n\r\n\t$ npm install apn\r\n\t\r\nAs a submodule of your project (you will also need to install [q][q])\r\n\r\n\t$ git submodule add http://github.com/argon/node-apn.git apn\r\n\t$ git submodule update --init\r\n\r\n## Quick Start\r\n\r\nThis is intended as a brief introduction, please refer to the documentation in `doc/` for more details.\r\n\r\n### Load in the module\r\n\r\n\tvar apn = require('apn');\r\n\r\n### Exported Objects\r\n- Connection\r\n- Notification\r\n- Device\r\n- Feedback\r\n- Errors\r\n\r\n### Connecting\r\nCreate a new connection to the APN gateway server using a dictionary of options. If you name your certificate and key files appropriately (`cert.pem` and `key.pem`) then the defaults should be suitable to get you up and running, the only thing you'll need to change is the `gateway` if you're in the sandbox environment.\r\n\r\n```javascript\r\n\tvar options = { \"gateway\": \"gateway.sandbox.push.apple.com\" };\r\n\r\n\tvar apnConnection = new apn.Connection(options);\r\n```\r\n\t\r\n**Important:** In a development environment you must set `gateway` to `gateway.sandbox.push.apple.com`.\r\n\r\n### Sending a notification\r\nTo send a notification first create a `Device` object. Pass it the device token as either a hexadecimal string, or alternatively as a `Buffer` object containing the token in binary form.\r\n\r\n\tvar myDevice = new apn.Device(token);\r\n\r\nNext, create a notification object and set parameters. See the [payload documentation][pl] for more details.\r\n\r\n\tvar note = new apn.Notification();\r\n\t\r\n\tnote.expiry = Math.floor(Date.now() / 1000) + 3600; // Expires 1 hour from now.\r\n\tnote.badge = 3;\r\n\tnote.sound = \"ping.aiff\";\r\n\tnote.alert = \"You have a new message\";\r\n\tnote.payload = {'messageFrom': 'Caroline'};\r\n\t\r\n\tapnConnection.pushNotification(note, myDevice);\r\n\t\r\n\r\n\r\nThe above options will compile the following dictionary to send to the device:\r\n\r\n\t{\"messageFrom\":\"Caroline\",\"aps\":{\"badge\":3,\"sound\":\"ping.aiff\",\"alert\":\"You have a new message\"}}\r\n\t\r\n**\\*N.B.:** If you wish to send notifications containing emoji or other multi-byte characters you will need to set `note.encoding = 'ucs2'`. This tells node to send the message with 16bit characters, however it also means your message payload will be limited to 128 characters.\r\n\r\n### Setting up the feedback service\r\n\r\nApple recommends checking the feedback service periodically for a list of devices for which there were failed delivery attempts.\r\n\r\nUsing the `Feedback` object it is possible to periodically query the server for the list. Many of the options are similar to that of `Connection`.\r\n\r\nAttach a listener to the `feedback` event to receive the output as two arguments, the `time` returned by the server (epoch time) and a `Buffer` object containing the device token - this event will be emitted for each device separately. Alternatively you can enable the `batchFeedback` option and the `feedback` event will provide an array of objects containing `time` and `device` properties.\r\n\r\n\tvar options = {\r\n\t\t\"batchFeedback\": true,\r\n\t\t\"interval\": 300\r\n\t};\r\n\r\n\tvar feedback = new apn.Feedback(options);\r\n\tfeedback.on(\"feedback\", function(devices) {\r\n\t\tdevices.forEach(function(item) {\r\n\t\t\t// Do something with item.device and item.time;\r\n\t\t});\r\n\t});\r\n\r\nBy specifying a time interval (in seconds) `Feedback` will periodically query the service without further intervention.\r\n\r\n**Important:** In a development environment you must set `address` to `feedback.sandbox.push.apple.com`.\r\n\r\nMore information about the feedback service can be found in the [feedback service documentation][fs].\r\n\r\n## Converting your APNs Certificate\r\n\r\nAfter requesting the certificate from Apple, export your private key as a .p12 file and download the .cer file from the iOS Provisioning Portal.\r\n\r\nNow, in the directory containing cert.cer and key.p12 execute the following commands to generate your .pem files:\r\n\r\n\t$ openssl x509 -in cert.cer -inform DER -outform PEM -out cert.pem\r\n\t$ openssl pkcs12 -in key.p12 -out key.pem -nodes\r\n\t\r\nIf you are using a development certificate you may wish to name them differently to enable fast switching between development and production. The filenames are configurable within the module options, so feel free to name them something more appropriate.\r\n\r\nIt is also possible to supply a PFX (PFX/PKCS12) package containing your certificate, key and any relevant CA certificates. The method to accomplish this is left as an exercise to the reader. It should be possible to select the relevant items in \"Keychain Access\" and use the export option with \".p12\" format.\r\n\r\n## Debugging\r\n\r\nIf you experience difficulties sending notifications or using the feedback service you can enable debug messages within the library by running your application with `DEBUG=apn` or `DEBUG=apnfb` set as an environment variable.\r\n\r\nYou will need the `debug` module which can be installed with `npm install debug`.\r\n\r\nYou are encouraged to read the extremely informative [Troubleshooting Push Notifications][tn2265] Tech Note in the first instance, in case your query is answered there.\r\n\r\nIf you experience any difficulties please create an Issue on GitHub and if possible include a log of the debug output around the time the problem manifests itself. If the problem is reproducible sample code is also extremely helpful.\r\n\r\n## Credits\r\n\r\nWritten and maintained by [Andrew Naylor][andrewnaylor].\r\n\r\nThanks to: [Ian Babrou][bobrik], [dgthistle][dgthistle], [Keith Larsen][keithnlarsen], [Mike P][mypark], [Greg Berg√©][neoziro], [Asad ur Rehman][AsadR], [Nebojsa Sabovic][nsabovic], [Alberto Gimeno][gimenete], [Randall Tombaugh][rwtombaugh], [Michael Stewart][thegreatmichael], [Olivier Louvignes][mgcrea], [porsager][porsager]\r\n\r\n## License\r\n\r\nReleased under the MIT License\r\n\r\nCopyright (c) 2010 Andrew Naylor\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n[errors]:https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingWIthAPS/CommunicatingWIthAPS.html#//apple_ref/doc/uid/TP40008194-CH101-SW4 \"The Binary Interface and Notification Formats\"\r\n[pl]: https://developer.apple.com/library/ios/#documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/ApplePushService/ApplePushService.html#//apple_ref/doc/uid/TP40008194-CH100-SW1 \"Local and Push Notification Programming Guide: Apple Push Notification Service\"\r\n[fs]:https://developer.apple.com/library/ios/#documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingWIthAPS/CommunicatingWIthAPS.html#//apple_ref/doc/uid/TP40008194-CH101-SW3 \"Communicating With APS\"\r\n[tn2265]:http://developer.apple.com/library/ios/#technotes/tn2265/_index.html \"Troubleshooting Push Notifications\"\r\n[andrewnaylor]: http://andrewnaylor.co.uk\r\n[bnoordhuis]: http://bnoordhuis.nl\r\n[npm]: https://npmjs.org\r\n[bobrik]: http://bobrik.name\r\n[dgthistle]: https://github.com/dgthistle\r\n[keithnlarsen]: https://github.com/keithnlarsen\r\n[mypark]: https://github.com/mypark\r\n[neoziro]: https://github.com/neoziro\r\n[AsadR]: https://github.com/AsadR\r\n[nsabovic]: https://github.com/nsabovic\r\n[gimenete]: https://github.com/gimenete\r\n[rwtombaugh]: https://github.com/rwtombaugh\r\n[thegreatmichael]: https://github.com/thegreatmichael\r\n[mgcrea]: https://github.com/mgcrea\r\n[porsager]: https://github.com/porsager\r\n[q]: https://github.com/kriskowal/q\r\n\r\n","google":"UA-32195216-1","note":"Don't delete this file! It's used internally to help with page regeneration."}